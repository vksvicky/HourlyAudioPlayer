name: macOS Version Compatibility Tests

permissions:
  contents: read
  issues: write
  pull-requests: write

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run tests daily at 2 AM UTC
    - cron: 0 2 * * *

jobs:
  test-macos-12:
    name: Test on macOS 12 (Monterey)
    runs-on: [self-hosted, macos, x64]
    timeout-minutes: 60
    continue-on-error: true
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: '14.2'
        
    - name: Verify macOS version
      run: |
        echo "Testing on macOS version:"
        sw_vers
        echo "Architecture:"
        uname -m
        echo "Verifying this is macOS 12 or compatible..."
        if [[ $(sw_vers -productVersion | cut -d. -f1) -ge 12 ]]; then
          echo "✅ macOS version is 12 or higher"
        else
          echo "❌ macOS version is below 12"
          exit 1
        fi
        
    - name: Run macOS version compatibility tests
      run: |
        echo "Running macOS 12.0+ compatibility tests..."
        ./run_tests.sh
        
    - name: Build and test
      run: |
        echo "Building project for macOS 12.0+..."
        xcodebuild -project HourlyAudioPlayer.xcodeproj -scheme HourlyAudioPlayer -configuration Debug build -destination 'platform=macOS,arch=x86_64'
        xcodebuild -project HourlyAudioPlayer.xcodeproj -scheme HourlyAudioPlayer -configuration Debug build -destination 'platform=macOS,arch=arm64'
        
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-macos-12
        path: |
          test-results/
          *.log

  test-macos-13:
    name: Test on macOS 13 (Ventura)
    runs-on: macos-13
    timeout-minutes: 30
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: '15.0'
        
    - name: Verify macOS version
      run: |
        echo "Testing on macOS version:"
        sw_vers
        echo "Architecture:"
        uname -m
        
    - name: Run macOS version compatibility tests
      run: |
        echo "Running macOS 12.0+ compatibility tests on macOS 13..."
        ./run_tests.sh
        
    - name: Build and test
      run: |
        echo "Building project for macOS 13.0+..."
        xcodebuild -project HourlyAudioPlayer.xcodeproj -scheme HourlyAudioPlayer -configuration Debug build -destination 'platform=macOS,arch=x86_64'
        xcodebuild -project HourlyAudioPlayer.xcodeproj -scheme HourlyAudioPlayer -configuration Debug build -destination 'platform=macOS,arch=arm64'
        
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-macos-13
        path: |
          test-results/
          *.log

  test-macos-14:
    name: Test on macOS 14 (Sonoma)
    runs-on: macos-14
    timeout-minutes: 30
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: '15.1'
        
    - name: Verify macOS version
      run: |
        echo "Testing on macOS version:"
        sw_vers
        echo "Architecture:"
        uname -m
        
    - name: Run macOS version compatibility tests
      run: |
        echo "Running macOS 14.0+ compatibility tests..."
        ./run_tests.sh
        
    - name: Build and test
      run: |
        echo "Building project for macOS 14.0+..."
        xcodebuild -project HourlyAudioPlayer.xcodeproj -scheme HourlyAudioPlayer -configuration Debug build -destination 'platform=macOS,arch=x86_64'
        xcodebuild -project HourlyAudioPlayer.xcodeproj -scheme HourlyAudioPlayer -configuration Debug build -destination 'platform=macOS,arch=arm64'
        
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-macos-14
        path: |
          test-results/
          *.log

  test-macos-15:
    name: Test on macOS 15 (Sequoia)
    runs-on: macos-15
    timeout-minutes: 30
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: '16.0'
        
    - name: Verify macOS version
      run: |
        echo "Testing on macOS version:"
        sw_vers
        echo "Architecture:"
        uname -m
        
    - name: Run macOS version compatibility tests
      run: |
        echo "Running macOS 15.0+ compatibility tests..."
        ./run_tests.sh
        
    - name: Build and test
      run: |
        echo "Building project for macOS 15.0+..."
        xcodebuild -project HourlyAudioPlayer.xcodeproj -scheme HourlyAudioPlayer -configuration Debug build -destination 'platform=macOS,arch=x86_64'
        xcodebuild -project HourlyAudioPlayer.xcodeproj -scheme HourlyAudioPlayer -configuration Debug build -destination 'platform=macOS,arch=arm64'
        
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-macos-15
        path: |
          test-results/
          *.log

  compatibility-summary:
    name: Compatibility Test Summary
    runs-on: macos-latest
    needs: [test-macos-12, test-macos-13, test-macos-14, test-macos-15]
    if: always()
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Download all test results
      uses: actions/download-artifact@v4
      
    - name: Generate compatibility report
      run: |
        echo "# macOS Version Compatibility Test Report" > compatibility-report.md
        echo "" >> compatibility-report.md
        echo "## Test Results Summary" >> compatibility-report.md
        echo "" >> compatibility-report.md
        echo "| macOS Version | Status | Architecture Support |" >> compatibility-report.md
        echo "|---------------|--------|---------------------|" >> compatibility-report.md
        
        # Check each macOS version test result
        if [ -d "test-results-macos-12" ]; then
          echo "| macOS 12 (Monterey) | ✅ Passed | x86_64, arm64 |" >> compatibility-report.md
        else
          echo "| macOS 12 (Monterey) | ⚠️ Skipped | Self-hosted runner required |" >> compatibility-report.md
        fi
        
        if [ -d "test-results-macos-13" ]; then
          echo "| macOS 13 (Ventura) | ✅ Passed | x86_64, arm64 |" >> compatibility-report.md
        else
          echo "| macOS 13 (Ventura) | ❌ Failed | - |" >> compatibility-report.md
        fi
        
        if [ -d "test-results-macos-14" ]; then
          echo "| macOS 14 (Sonoma) | ✅ Passed | x86_64, arm64 |" >> compatibility-report.md
        else
          echo "| macOS 14 (Sonoma) | ❌ Failed | - |" >> compatibility-report.md
        fi
        
        if [ -d "test-results-macos-15" ]; then
          echo "| macOS 15 (Sequoia) | ✅ Passed | x86_64, arm64 |" >> compatibility-report.md
        else
          echo "| macOS 15 (Sequoia) | ❌ Failed | - |" >> compatibility-report.md
        fi
        
        if [ -d "test-results-macos-26" ]; then
          echo "| macOS 26 (Beta) | ✅ Passed | x86_64, arm64 |" >> compatibility-report.md
        else
          echo "| macOS 26 (Beta) | ⚠️ Skipped | Beta version |" >> compatibility-report.md
        fi

        echo "" >> compatibility-report.md
        echo "## Notes" >> compatibility-report.md
        echo "" >> compatibility-report.md
        echo "- App targets macOS 12.0+ (Monterey and later)" >> compatibility-report.md
        echo "- macOS 12 testing requires self-hosted runners (GitHub no longer provides macOS 12 runners)" >> compatibility-report.md
        echo "- macOS 13, 14, 15 tests run on GitHub-hosted runners" >> compatibility-report.md
        echo "- macOS 26 is tested on GitHub-hosted beta runners" >> compatibility-report.md
        echo "- To enable macOS 12 testing, set up a self-hosted runner with macOS 12" >> compatibility-report.md
        echo "" >> compatibility-report.md
        echo "## Test Details" >> compatibility-report.md
        echo "" >> compatibility-report.md
        echo "All tests include:" >> compatibility-report.md
        echo "- macOS version compatibility validation" >> compatibility-report.md
        echo "- SwiftUI framework compatibility" >> compatibility-report.md
        echo "- AppKit integration tests" >> compatibility-report.md
        echo "- AVFoundation audio functionality" >> compatibility-report.md
        echo "- UserNotifications framework" >> compatibility-report.md
        echo "- File system operations" >> compatibility-report.md
        echo "- Memory management" >> compatibility-report.md
        echo "- Performance benchmarks" >> compatibility-report.md
        echo "- CI/CD environment validation" >> compatibility-report.md
        
        cat compatibility-report.md
        
    - name: Upload compatibility report
      uses: actions/upload-artifact@v4
      with:
        name: compatibility-report
        path: compatibility-report.md
        
    - name: Comment on PR
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          const report = fs.readFileSync('compatibility-report.md', 'utf8');
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: report
          });
